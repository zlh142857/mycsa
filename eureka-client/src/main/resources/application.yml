server:
  undertow:
    # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程
    io-threads: 5
    # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载
    worker-threads: 20
    # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理
    # 每块buffer的空间大小,越小的空间被利用越充分
    buffer-size: 1024
    # 是否分配的直接内存
    direct-buffers: true
  port: 8862
  # 数据库基本配置
spring:
  application:
    name: eureka-client
  #datasource
  datasource:
    url : jdbc:mysql://172.16.107.205:3306/pwcontrol?useUnicode=true&characterEncoding=utf8&characterSetResults=utf8
    username : root
    password : root
    driverClassName : com.mysql.jdbc.Driver
    max-active: 20
    max-idle: 8
    min-idle: 8
    initial-size: 10
  jpa:
    database : MYSQL
  # Show or not log for each sql query
    show-sql : true
    open-in-view: false
    hibernate:
      # Naming strategy
      #[org.hibernate.cfg.ImprovedNamingStrategy | org.hibernate.cfg.DefaultNamingStrategy]
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
  # stripped before adding them to the entity manager)
  properties:
    hibernate:
      dialect : org.hibernate.dialect.MySQL5Dialect
  #classpath目录下的WEB-INF文件夹内容修改不重启
      exclude: WEB-INF/**
  servlet:
    multipart:
      max-file-size: 1024Mb
      max-request-size: 10240Mb
  activiti:
    database-schema-update: true
    check-process-definitions: true
    process-definition-location-prefix: classpath:/processes/
    history-level: none
    #full 保存历史记录最高级别,none不保存历史记录
  # 显示后台处理的SQL语句
  redis:
    shiro:
      host: 127.0.0.1
      port: 6379
      timeout: 0
      password: 142857
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8860/eureka/
    #下面配置为健康监测机制
    #healthcheck:
      #enabled : true
    #instance:
      # 每隔10s发送一次心跳
      #lease-renewal-interval-in-seconds: 10
      # 告知服务端30秒还未收到心跳的话，就将该服务移除列表
      #lease-expiration-duration-in-seconds: 30
logging.config:
  classpath: log4j2.xml
logging.level.org.springframework: FATAL